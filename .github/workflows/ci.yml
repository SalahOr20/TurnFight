name: CI auto merge dev → main

on:
  push:
    branches:
      - dev

jobs:
  test-and-merge:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make mvnw executable
        run: chmod +x mvnw

      - name: Build & test with Maven
        run: ./mvnw clean verify

      - name: Merge dev to main if tests pass
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          git fetch origin
          git checkout main || git checkout -b main
          git merge origin/dev --no-ff --allow-unrelated-histories -m "Auto-merge from dev"
          git push origin main

      - name: Create failure branch and revert dev if tests fail
        if: failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }}
          
          # Récupère toute l'historique
          git fetch --unshallow || true
          git fetch origin dev
          
          # Crée la branche de secours
          git checkout -b fail-${GITHUB_SHA::7} origin/dev
          git push origin fail-${GITHUB_SHA::7}
          
          # Revenir au commit précédent
          git checkout dev
          PREV_COMMIT=$(git rev-list origin/dev | tail -n 1)
          git reset --hard "$PREV_COMMIT"
          git push origin dev --force
